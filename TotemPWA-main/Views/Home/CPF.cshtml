@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adicione seu CPF</title>
    <link rel="stylesheet" href="~/css/CPF.css">
    <link href="https://fonts.googleapis.com/css2?family=Tilt+Warp&display=swap" rel="stylesheet">
</head>
<body>
    <div class="main">
        <div class="c1">
            <div class="content">
                <div class="conteiner">
                    <a class="title">CPF na nota?</a>
                    <div class="opcao-grid">    
                            <div class="comer-aqui">
                                <input class="inputCpf" type="text" id="cpfInput" placeholder="Digite seu CPF" maxlength="14" > 
                                <span id="cpfError" style="color:red; display:none; font-size:1.5vh;">CPF inválido</span>
                            </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="ConteinerBtn">
            <div class="NavBtn">
             <a id="cancelar" href="@Url.Action("ComerouLevar", "Home")">Não colocar</a>
             <a class="btnProsseguir" id="proceedButton" href="@Url.Action("ComerouLevar", "Home")" style="display: none; pointer-events: none; opacity: 0.6;">Prosseguir</a>
            </div>
        </div>
    </div>

    <script src="~/js/CPF.js"></script>
    <script>
    // Função para validar CPF
    function validarCPF(cpf) {
        cpf = cpf.replace(/[^\d]+/g,'');
        if (cpf.length !== 11 || /^(\d)\1+$/.test(cpf)) return false;
        let soma = 0, resto;
        for (let i = 1; i <= 9; i++) soma += parseInt(cpf.substring(i-1, i)) * (11 - i);
        resto = (soma * 10) % 11;
        if ((resto === 10) || (resto === 11)) resto = 0;
        if (resto !== parseInt(cpf.substring(9, 10))) return false;
        soma = 0;
        for (let i = 1; i <= 10; i++) soma += parseInt(cpf.substring(i-1, i)) * (12 - i);
        resto = (soma * 10) % 11;
        if ((resto === 10) || (resto === 11)) resto = 0;
        if (resto !== parseInt(cpf.substring(10, 11))) return false;
        return true;
    }

    const cpfInput = document.getElementById('cpfInput');
    const proceedButton = document.getElementById('proceedButton');
    const cpfError = document.getElementById('cpfError');

    cpfInput.addEventListener('input', function() {
        let value = cpfInput.value.replace(/\D/g, '');
        // Formatação automática
        if (value.length > 3) value = value.replace(/^(\d{3})(\d)/, '$1.$2');
        if (value.length > 7) value = value.replace(/^(\d{3})\.(\d{3})(\d)/, '$1.$2.$3');
        if (value.length > 11) value = value.replace(/^(\d{3})\.(\d{3})\.(\d{3})(\d)/, '$1.$2.$3-$4');
        cpfInput.value = value;

        // Validação
        if (value.length === 14) {
            if (validarCPF(value)) {
                cpfError.style.display = 'none';
                proceedButton.style.display = '';
                proceedButton.style.pointerEvents = 'auto';
                proceedButton.style.opacity = '1';
            } else {
                cpfError.style.display = '';
                proceedButton.style.display = '';
                proceedButton.style.pointerEvents = 'none';
                proceedButton.style.opacity = '0.6';
            }
        } else {
            cpfError.style.display = 'none';
            proceedButton.style.display = 'none';
            proceedButton.style.pointerEvents = 'none';
            proceedButton.style.opacity = '0.6';
        }
    });

    // Impede o clique se o CPF for inválido
    proceedButton.addEventListener('click', function(e) {
        let value = cpfInput.value.replace(/\D/g, '');
        if (!validarCPF(value)) {
            e.preventDefault();
            return false;
        }
    });
    </script>
</body>
</html>